openapi: 3.0.0
info:
  title: Beverage Store API
  version: 1.0.0
  description: REST API for managing beverages and orders

servers:
  - url: http://localhost:8080/api

paths:
  /beverages:
    get:
      summary: Get list of beverages
      description: Returns a paginated list of beverages with optional price filtering.
      parameters:
        - in: query
          name: minPrice
          schema:
            type: number
            format: double
          description: Minimum price filter
        - in: query
          name: maxPrice
          schema:
            type: number
            format: double
          description: Maximum price filter
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number (starting at 1)
        - in: query
          name: size
          schema:
            type: integer
            default: 10
            minimum: 1
          description: Number of items per page
      responses:
        '200':
          description: List of beverages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Beverage'
        '400':
          description: Invalid pagination or filtering parameters

    post:
      summary: Add a new beverage (employee)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeverageDTO'
      responses:
        '201':
          description: Beverage created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeverageDTO'
        '400':
          description: Invalid beverage data

  /beverages/{id}:
    put:
      summary: Update beverage by ID (employee)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BeverageDTO'
      responses:
        '200':
          description: Beverage updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeverageDTO'
        '404':
          description: Beverage not found

  /orders:
    get:
      summary: Get all orders
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDTO'

    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '201':
          description: Order created
        '400':
          description: Invalid order

  /orders/{id}:
    put:
      summary: Update an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '200':
          description: Order updated
        '404':
          description: Order not found

    delete:
      summary: Cancel an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Order deleted

  /orders/{id}/process:
    put:
      summary: Mark an order as processed
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order processed
        '404':
          description: Order not found

components:
  schemas:
    BeverageDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
        price:
          type: number
        quantity:
          type: integer

    OrderItemDTO:
      type: object
      properties:
        beverageId:
          type: integer
        quantity:
          type: integer

    OrderDTO:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemDTO'
